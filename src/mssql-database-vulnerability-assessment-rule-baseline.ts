// https://www.terraform.io/docs/providers/azurerm/r/mssql_database_vulnerability_assessment_rule_baseline.html
// generated from terraform resource schema

import { Construct } from 'constructs';
import * as cdktf from 'cdktf';

// Configuration

export interface MssqlDatabaseVulnerabilityAssessmentRuleBaselineConfig extends cdktf.TerraformMetaArguments {
  readonly baselineName?: string;
  readonly databaseName: string;
  readonly ruleId: string;
  readonly serverVulnerabilityAssessmentId: string;
  /** baseline_result block */
  readonly baselineResult: MssqlDatabaseVulnerabilityAssessmentRuleBaselineBaselineResult[];
  /** timeouts block */
  readonly timeouts?: MssqlDatabaseVulnerabilityAssessmentRuleBaselineTimeouts;
}
export interface MssqlDatabaseVulnerabilityAssessmentRuleBaselineBaselineResult {
  readonly result: string[];
}

function mssqlDatabaseVulnerabilityAssessmentRuleBaselineBaselineResultToTerraform(struct?: MssqlDatabaseVulnerabilityAssessmentRuleBaselineBaselineResult): any {
  if (!cdktf.canInspect(struct)) { return struct; }
  return {
    result: cdktf.listMapper(cdktf.stringToTerraform)(struct!.result),
  }
}

export interface MssqlDatabaseVulnerabilityAssessmentRuleBaselineTimeouts {
  readonly create?: string;
  readonly delete?: string;
  readonly read?: string;
  readonly update?: string;
}

function mssqlDatabaseVulnerabilityAssessmentRuleBaselineTimeoutsToTerraform(struct?: MssqlDatabaseVulnerabilityAssessmentRuleBaselineTimeouts): any {
  if (!cdktf.canInspect(struct)) { return struct; }
  return {
    create: cdktf.stringToTerraform(struct!.create),
    delete: cdktf.stringToTerraform(struct!.delete),
    read: cdktf.stringToTerraform(struct!.read),
    update: cdktf.stringToTerraform(struct!.update),
  }
}


// Resource

export class MssqlDatabaseVulnerabilityAssessmentRuleBaseline extends cdktf.TerraformResource {

  // ===========
  // INITIALIZER
  // ===========

  public constructor(scope: Construct, id: string, config: MssqlDatabaseVulnerabilityAssessmentRuleBaselineConfig) {
    super(scope, id, {
      terraformResourceType: 'azurerm_mssql_database_vulnerability_assessment_rule_baseline',
      terraformGeneratorMetadata: {
        providerName: 'azurerm'
      },
      provider: config.provider,
      dependsOn: config.dependsOn,
      count: config.count,
      lifecycle: config.lifecycle
    });
    this._baselineName = config.baselineName;
    this._databaseName = config.databaseName;
    this._ruleId = config.ruleId;
    this._serverVulnerabilityAssessmentId = config.serverVulnerabilityAssessmentId;
    this._baselineResult = config.baselineResult;
    this._timeouts = config.timeouts;
  }

  // ==========
  // ATTRIBUTES
  // ==========

  // baseline_name - computed: false, optional: true, required: false
  private _baselineName?: string;
  public get baselineName() {
    return this.getStringAttribute('baseline_name');
  }
  public set baselineName(value: string ) {
    this._baselineName = value;
  }
  public resetBaselineName() {
    this._baselineName = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get baselineNameInput() {
    return this._baselineName
  }

  // database_name - computed: false, optional: false, required: true
  private _databaseName: string;
  public get databaseName() {
    return this.getStringAttribute('database_name');
  }
  public set databaseName(value: string) {
    this._databaseName = value;
  }
  // Temporarily expose input value. Use with caution.
  public get databaseNameInput() {
    return this._databaseName
  }

  // id - computed: true, optional: true, required: false
  public get id() {
    return this.getStringAttribute('id');
  }

  // rule_id - computed: false, optional: false, required: true
  private _ruleId: string;
  public get ruleId() {
    return this.getStringAttribute('rule_id');
  }
  public set ruleId(value: string) {
    this._ruleId = value;
  }
  // Temporarily expose input value. Use with caution.
  public get ruleIdInput() {
    return this._ruleId
  }

  // server_vulnerability_assessment_id - computed: false, optional: false, required: true
  private _serverVulnerabilityAssessmentId: string;
  public get serverVulnerabilityAssessmentId() {
    return this.getStringAttribute('server_vulnerability_assessment_id');
  }
  public set serverVulnerabilityAssessmentId(value: string) {
    this._serverVulnerabilityAssessmentId = value;
  }
  // Temporarily expose input value. Use with caution.
  public get serverVulnerabilityAssessmentIdInput() {
    return this._serverVulnerabilityAssessmentId
  }

  // baseline_result - computed: false, optional: false, required: true
  private _baselineResult: MssqlDatabaseVulnerabilityAssessmentRuleBaselineBaselineResult[];
  public get baselineResult() {
    return this.interpolationForAttribute('baseline_result') as any;
  }
  public set baselineResult(value: MssqlDatabaseVulnerabilityAssessmentRuleBaselineBaselineResult[]) {
    this._baselineResult = value;
  }
  // Temporarily expose input value. Use with caution.
  public get baselineResultInput() {
    return this._baselineResult
  }

  // timeouts - computed: false, optional: true, required: false
  private _timeouts?: MssqlDatabaseVulnerabilityAssessmentRuleBaselineTimeouts;
  public get timeouts() {
    return this.interpolationForAttribute('timeouts') as any;
  }
  public set timeouts(value: MssqlDatabaseVulnerabilityAssessmentRuleBaselineTimeouts ) {
    this._timeouts = value;
  }
  public resetTimeouts() {
    this._timeouts = undefined;
  }
  // Temporarily expose input value. Use with caution.
  public get timeoutsInput() {
    return this._timeouts
  }

  // =========
  // SYNTHESIS
  // =========

  protected synthesizeAttributes(): { [name: string]: any } {
    return {
      baseline_name: cdktf.stringToTerraform(this._baselineName),
      database_name: cdktf.stringToTerraform(this._databaseName),
      rule_id: cdktf.stringToTerraform(this._ruleId),
      server_vulnerability_assessment_id: cdktf.stringToTerraform(this._serverVulnerabilityAssessmentId),
      baseline_result: cdktf.listMapper(mssqlDatabaseVulnerabilityAssessmentRuleBaselineBaselineResultToTerraform)(this._baselineResult),
      timeouts: mssqlDatabaseVulnerabilityAssessmentRuleBaselineTimeoutsToTerraform(this._timeouts),
    };
  }
}
